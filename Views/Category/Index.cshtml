@model List<SampleProject.Models.Category>;
@{
    ViewData["Title"] = "Categories";
}

<div class="flex justify-between items-center mb-3">
    @await Html.PartialAsync("Components/_Breadcrumbs")
    @* admin options *@
    <div class="ms-auto relative me-2">
        <button class="btn upd" onclick="this.nextElementSibling.classList.toggle('scale-100')">
            <span>Admin Options</span>
            <i class="material-icons">keyboard_arrow_down</i>
        </button>
        <div class="absolute overflow-hidden bg-white shadow-lg shadow-gray-600 w-full scale-0 transition-transform origin-top rounded z-2 top-[125%]">
            <ul class="flex flex-col gap-3 p-3">
                <li>
                    <button class="btn add w-full" onclick="toggleConfirm('Are you sure?', this)">
                        <a class="hidden" asp-controller="Category" asp-action="Seed"></a>
                        <i class="material-icons">keyboard_arrow_down</i>
                        <span>Seed</span>
                    </button>   
                </li>
                <li>
                    <button class="btn del w-full" onclick="toggleConfirm('Are you sure?', () => window.location.href = '/Category/Truncate'))">
                        <i class="material-icons">keyboard_arrow_down</i>
                        <span>Truncate</span>
                    </button>
                </li>
            </ul>
        </div>
    </div>
    @await Html.PartialAsync("Components/_CreateButton", "Category")
</div>

@if (Model != null && Model.Count > 0)
{
    <div class="overflow-x-auto">
        <table class="table striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Title</th>
                    <th>Slug</th>
                    <th>Products</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in Model)
                {
                    <tr>
                        <td>@category.Id</td>
                        <td>@category.Title</td>
                        <td>@category.Slug</td>
                        <td><span class="bg-blue-500 text-gray-100 px-2 py-1 aspect-square! rounded-full text-sm select-none cursor-pointer">@category.ProductsCount</span></td>
                        <td>
                            <div class="flex gap-2">
                                @await Html.PartialAsync("Components/_EditButton", new Dictionary<string, string> { { "Controller", "Category" }, { "Id", category.Id.ToString() } })
                                @await Html.PartialAsync("Components/_DeleteButton", new Dictionary<string,string> (){ { "Controller","Category"},{ "Id", category.Id.ToString()} })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="100%">
                        
                        <div class="flex justify-between">
                            <a class="pagination-button @(ViewBag.Page == 1? "disabled":null)" asp-controller="Category" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage-1)">
                                <i class="material-icons">chevron_left</i>
                                <span>Previous</span>
                            </a>
                            <div>
                                @for(int i = 1; i <= ViewBag.Pages; i++) {
                                    if (i == ViewBag.Page) {
                                        <a class="pagination-link text-blue-500! font-bold" asp-controller="Category" asp-action="Index" asp-route-page="@i">
                                            @i
                                        </a>
                                    } else {
                                        <a class="pagination-link" asp-controller="Category" asp-action="Index" asp-route-page="@i">
                                            @i
                                        </a>
                                    }
                                }
                            </div>
                            <a class="pagination-button @(ViewBag.Pages == ViewBag.Page? "disabled":null)" asp-controller="Category" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage+1)">
                                <span>Next</span>
                                <i class="material-icons">chevron_right</i>
                            </a>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
}
else
{
    <div class="alert">
        <i class="material-icons">warning</i>
        <p>No category defined yet!</p>
    </div>   
}